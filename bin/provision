#!/bin/bash -eux

#
# THIS IS RUN INSIDE THE VAGRANT BOX
#

if [ ! -f /vagrant/vars.sh ]; then
	echo "Error: /vagrant/vars.sh does not exist"
	exit 1
fi

# Load ENV vars.
source /vagrant/vars.sh

# Install dependencies
apt-get install -y curl unzip kpartx

# Download disk image.
if [ ! -f /tmp/raspios.zip ]; then
	curl -fsSLo /tmp/raspios.img.xz $RASPIOS_IMAGE
fi

# Delete any image created on previous run.
if [ -f /tmp/raspios.img ]; then
	rm /tmp/raspios.img
fi

# Unpack disk image.
pushd /tmp
	unxz /tmp/raspios.img.xz
popd

# Mount the two partitions
pushd /mnt
	mkdir -p p1 p2
	kpartx -avs /tmp/raspios.img
	if ! mount | grep -q /dev/mapper/loop0p1; then mount -o rw -t vfat /dev/mapper/loop0p1 /mnt/p1; fi
	if ! mount | grep -q /dev/mapper/loop0p2; then mount -o rw -t ext4 /dev/mapper/loop0p2 /mnt/p2; fi
popd

# Enable SSH
# The release notes[1] say:
#	[1] http://downloads.raspberrypi.org/raspbian/release_notes.txt
#
# > 2016-11-25:
# > SSH disabled by default; can be enabled by creating a file with name "ssh" in boot partition
#
# We could enable the service ourselves, but it seems sensible to stick with
# whatever they're recommending, in case they change the effects.
#
# Note: No owner, because vfat
pushd /mnt/p1
	touch ssh
popd

# Disable password authentication
sed -i 's/^#*\(PasswordAuthentication \)[a-z]*$/\1no/g' /mnt/p2/etc/ssh/sshd_config

# Add SSH pubkeys
if [ -z ${GITHUB_USERNAME+x} ]; then
	echo "Warning: GITHUB_USERNAME is not set"
else
	pushd /mnt/p2/home/pi
		mkdir -p .ssh
		chown -R 1000:1000 .ssh
		chmod 700 .ssh
		curl -sS https://github.com/$GITHUB_USERNAME.keys > .ssh/authorized_keys
		chown 1000:1000 .ssh/authorized_keys
		chmod 600 .ssh/authorized_keys
	popd
fi

# Configure wifi
if [ -z ${WIFI_SSID+x} ]; then
	echo "Warning: WIFI_SSID is not set"
else
	if ! grep -q $WIFI_SSID /mnt/p2/etc/wpa_supplicant/wpa_supplicant.conf; then
		cat <<-EOF > /mnt/p2/etc/wpa_supplicant/wpa_supplicant.conf
			ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
			update_config=1
			network={
			  ssid="$WIFI_SSID"
			  psk="$WIFI_PSK"
			}
			EOF
	fi
fi

# Change hostname
if [ -z ${NEW_HOSTNAME+x} ]; then
	echo "Warning: NEW_HOSTNAME is not set"
else
	sed -i "s/^\(127.0.1.1\s*\).*$/\1$NEW_HOSTNAME/g" /mnt/p2/etc/hosts
	echo $NEW_HOSTNAME > /mnt/p2/etc/hostname
fi

# Ensure that writes made it to disk
sync

# Unmount disk image
umount /mnt/p1
umount /mnt/p2
kpartx -dv /tmp/raspios.img
